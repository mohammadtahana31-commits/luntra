// Define and export prompt engineering techniques to be used in the Guide Modal and by the Gemini service.
export const PROMPT_TECHNIQUES = {
    "Zero-Shot Prompting": "از مدل می‌خواهد تا کاری را بدون هیچ مثالی انجام دهد. مناسب برای وظایf ساده و عمومی.",
    "One-Shot Prompting": "یک مثال به مدل داده می‌شود تا وظیفه را بهتر درک کند. برای وظایفی که نیاز به درک الگو دارند.",
    "Few-Shot Prompting": "چند مثال به مدل داده می‌شود تا با دقت بیشتری پاسخ دهد. ایده‌آل برای وظایف پیچیده‌تر و خاص.",
    "Chain-of-Thought Prompting (CoT)": "از مدل خواسته می‌شود تا مراحل تفکر خود را قدم به قدم توضیح دهد تا به جواب نهایی برسد. دقت را در مسائل استدلالی بالا می‌برد.",
    "Zero-Shot Chain-of-Thought (Zero-CoT)": "با افزودن عبارت «بیا قدم به قدم فکر کنیم» به پرامت، مدل را بدون نیاز به مثال به تفکر مرحله‌ای تشویق می‌کند.",
    "Self-Consistency Prompting": "چندین مسیر فکری (Chain-of-Thought) از مدل گرفته می‌شود و پاسخی که بیشترین تکرار را دارد به عنوان جواب نهایی انتخاب می‌شود.",
    "ReAct Prompting (Reason + Act)": "مدل را وادار می‌کند تا بین استدلال (Reason) و انجام عمل (Act) جابجا شود. برای وظایفی که نیاز به تعامل با ابزارهای خارجی دارند.",
    "PAL (Program-Aided Language Models) Prompting": "مدل زبان را با یک مفسر کد (مانند پایتون) ترکیب می‌کند تا مسائل ریاضی و منطقی را با نوشتن و اجرای کد حل کند.",
    "Generated Knowledge Prompting": "ابتدا از مدل خواسته می‌شود تا اطلاعات مرتبط با سوال را تولید کند و سپس با استفاده از آن اطلاعات به سوال اصلی پاسخ دهد.",
    "Least-to-Most Prompting": "یک مسئله پیچیده به زیرمسئله‌های ساده‌تر تقسیم می‌شود و مدل به ترتیب آن‌ها را حل می‌کند تا به جواب نهایی برسد.",
    "Directional Stimulus Prompting (DSP)": "شامل یک راهنمایی یا سرنخ (مانند کلمات کلیدی) برای هدایت مدل به سمت تولید خروجی مطلوب است.",
    "Maieutic Prompting": "مانند روش سقراطی، مدل را با سوالات متوالی به چالش می‌کشد تا پاسخ‌های متناقض خود را اصلاح کند و به درک عمیق‌تری برسد.",
    "Progressive Hint Prompting": "به تدریج و در چند مرحله، راهنمایی‌های بیشتری به مدل داده می‌شود تا بتواند مسائل پیچیده را حل کند.",
    "CoT-SC (Chain-of-Thought with Self-Consistency)": "ترکیب دو روش قدرتمند CoT و Self-Consistency برای دستیابی به بالاترین دقت در مسائل استدلالی پیچیده.",
    "Meta-Prompting": "یک پرامت سطح بالا که به مدل یاد می‌دهد چگونه خودش پرامت‌های بهتری برای وظایف دیگر ایجاد کند.",
    "Tree-of-Thought (ToT) Prompting": "به مدل اجازه می‌دهد تا چندین مسیر استدلالی مختلف را به صورت یک درخت بررسی کرده و بهترین مسیر را برای رسیدن به پاسخ انتخاب کند.",
    "Graph-of-Thought Prompting": "یک ساختار گراف مانند برای مدل‌سازی افکار ایجاد می‌کند که در آن افکار می‌توانند به صورت غیرخطی به هم متصل شوند و چرخه‌های استدلالی ایجاد کنند.",
    "Step-Back Prompting": "از مدل می‌خواهد تا یک قدم به عقب برود و به جای جزئیات، به مفاهیم و اصول کلی فکر کند تا به راه‌حل بهتری برای مسئله اصلی برسد.",
    "Analogy Prompting": "از مدل درخواست می‌کند تا برای توضیح یک مفهوم پیچیده، یک مثال یا تشبیه از یک حوزه قابل فهم‌تر بیاورد. عالی برای آموزش و ساده‌سازی.",
    "Flipped Interaction Pattern": "به جای پاسخ مستقیم، مدل را راهنمایی می‌کند تا با پرسیدن سوالات روشن‌کننده از کاربر، ابهامات را برطرف کرده و سپس پاسخ نهایی را ارائه دهد.",
    "Show, Don't Tell Prompting": "به جای توصیف خشک یک مفهوم، از مدل می‌خواهد آن را در قالب یک داستان، مثال عملی یا سناریو به نمایش بگذارد. ایده‌آل برای محتوای خلاق.",
    "System 2 Prompting": "به صراحت از مدل می‌خواهد تا آهسته و با دقت فکر کند، از قضاوت‌های سریع و شهودی (سیستم ۱) پرهیز کرده و استدلال عمیق‌تری (سیستم ۲) داشته باشد.",
    "Answer-First Prompting": "مدل را ملزم می‌کند تا ابتدا پاسخ نهایی و مستقیم را ارائه دهد و سپس به توضیح، استدلال و جزئیات بپردازد. مناسب برای دریافت سریع اطلاعات.",
    "Multimodal Prompting": "پرامت شامل انواع مختلفی از ورودی‌ها مانند متن، تصویر، و صدا است.",
    "Instruction Prompting": "دستورالعمل‌های واضح و مشخصی به مدل داده می‌شود تا دقیقا طبق آن عمل کند.",
    "Prompt Chaining": "خروجی یک پرامت به عنوان ورودی برای پرامت بعدی استفاده می‌شود تا یک وظیفه پیچیده به صورت زنجیره‌ای از مراحل ساده‌تر حل شود.",
    "Contextual Prompting": "فراهم کردن زمینه و اطلاعات قبلی برای مدل تا بتواند پاسخ‌های مرتبط‌تر و دقیق‌تری تولید کند.",
    "Retrieval-Augmented Prompting (RAP)": "قبل از پاسخ دادن، مدل اطلاعات مرتبط را از یک پایگاه دانش خارجی (مانند ویکی‌پدیا) بازیابی کرده و از آن در پاسخ خود استفاده می‌کند.",
    "Role Prompting": "از مدل خواسته می‌شود تا در نقش یک شخصیت خاص (مانند یک کارشناس، یک شاعر) پاسخ دهد.",
    "Persona Prompting": "مشابه Role Prompting، اما با جزئیات بیشتر در مورد شخصیت، سبک و لحن مورد نظر.",
    "Template-based Prompting": "استفاده از یک قالب از پیش تعریف‌شده که کاربر فقط جاهای خالی آن را پر می‌کند.",
    "Structured Prompting (JSON / XML style)": "ارائه ورودی و درخواست خروجی در یک فرمت ساختاریافته مانند JSON یا XML.",
    "Contrastive Prompting": "ارائه مثال‌های مثبت و منفی به مدل برای درک بهتر مرزهای یک مفهوم.",
    "Adversarial Prompting": "طراحی پرامت‌هایی که سعی در به چالش کشیدن و فریب دادن مدل دارند تا نقاط ضعف آن مشخص شود.",
    "Reflection Prompting": "مدل ابتدا یک پاسخ اولیه تولید می‌کند، سپس آن را نقد کرده و بر اساس نقد خود، پاسخ را بهبود می‌بخشد.",
    "JSON prompt": "درخواست خروجی در فرمت مشخص JSON با ساختار و کلیدهای از پیش تعیین‌شده. مناسب برای یکپارچه‌سازی با سایر سیستم‌ها."
  };

export const PROMPT_CATEGORIES = [
    "زندگی روزمره",
    "آموزش و یادگیری",
    "کسب‌وکار و بازاریابی",
    "هنر و خلاقیت",
    "صنعت و فناوری",
    "برنامه‌نویسی و توسعه نرم‌افزار",
    "تولید محتوا و نویسندگی",
    "تحقیق و تحلیل داده",
    "سلامت و سبک زندگی",
    "اقتصاد و مالی",
    "سفر و گردشگری",
    "آشپزی و دستور پخت",
    "بازی و سرگرمی",
    "تاریخ و فرهنگ",
];